The shesha folder contain provide a python interface to the sutra of compass project.

In order to compile, environment variable required:
    path to compass: COMPASS_ROOT_DIR
    path to cuda   : CUDA_ROOT

The compilation is done with the command:
    python setup.py build_ext --inplace

    REQUIREMENT:
        * cython 0.22
        * python 2.7
        * mpi4py 1.3.1
        * carma librairie
        * sutra librairie
        * naga module


To clean the folder, use the command:
    python clean.py


Running test:
    python (-i) "test_file" "test_par"
    mpirun -np "nbproc" python "test_file" "test_par"

    ex: from shesha folder
        "python test/closed_loop.py data/par/1wfs8x8_1layer_rtc_dm.py"
        "mpirun -np 2 python test/closed_loop_mpi.py data/par/1wfs8x8_1layer_rtc_dm.py"


MPI available only with:
    -wfs_type="sh"
    -no lgs
    -centroider_type="cog"


Content:
    * src                       folder containing wrapper sources
        - shesha.pyx
        - atmos.pyx
        - geom.pyx
        - target.pyx
        - tel.pyx
        - make_pupil.py
        - iterkolmo.py
        - loop.pyx
        - wfs.pyx
        - sensors.pyx
        - dms.pyx
        - rtc.pyx
        - centroider.pyx
        - controller.pyx

    * shesha.pxd             header like file for shesha library

    * data                      folder containig datas 
        - Na profile
        - apertures              
        - mat                   folder containig eigenvalues, imat matrices
                                    U matrices, pzt ok and nok vectors
        - par                   folder containig parameters files
        - turbu                 folder containig turbulence matrices and stencils

    * setup.py                  compilation setups

    * clean.py                  cleaning script

    * test                        testing routines
            test.py               outdated
            test_mpi.py           outdated
            closed_loop.py        closed loop test
            closed_loop_mpi.py    closed loop test with mpi
