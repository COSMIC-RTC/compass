
stages:
- build
- lint
- test
- pages

build_generic:
  stage: build
  variables:
    COMPASS_ROOT: "/builds/compass/compass"
    SHESHA_ROOT: "$COMPASS_ROOT/shesha"
    VCPKG_ROOT: "/builds/compass/vcpkg"
    COMPASS_DO_HALF: "OFF"
  script:
  - export PYTHONPATH=$PYTHONPATH:$SHESHA_ROOT:$COMPASS_ROOT/local/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$COMPASS_ROOT/local/lib
  - export PATH=$PATH:$VCPKG_ROOT
  - unset CUDA_SM
  - . $CONDA_ROOT/etc/profile.d/conda.sh
  - . $CONDA_ROOT/etc/profile.d/mamba.sh
  - mamba env create --file environment.yml
  - mamba activate compass
  - ./script/install_vcpkg.sh $VCPKG_ROOT
  - ./compile_vcpkg.py
  when: manual
  only:
  - merge_requests
  - develop
  artifacts:
    name: "${CI_JOB_NAME}_binaires"
    paths:
    - local/
    expire_in: 6 mos

sast:
  stage: lint
include:
- template: Jobs/Dependency-Scanning.latest.gitlab-ci.yml
- template: Jobs/SAST.latest.gitlab-ci.yml

code_quality_generic:
  stage: lint
  variables:
    COMPASS_ROOT: "/builds/compass/compass"
    SHESHA_ROOT: "$COMPASS_ROOT/shesha"
    COMPASS_DO_HALF: "OFF"
  before_script:
  - 'pip3 install ruff'
  script:
  - export PYTHONPATH=$PYTHONPATH:$SHESHA_ROOT:$NAGA_ROOT:$COMPASS_ROOT/local/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$COMPASS_ROOT/local/lib
  - . $CONDA_ROOT/etc/profile.d/conda.sh
  - . $CONDA_ROOT/etc/profile.d/mamba.sh
  - mamba env create --file environment.yml
  - mamba activate compass
  - ruff check shesha > gl-code-quality-report.json
  when: manual
  only:
  - develop
  artifacts:
    name: "${CI_PROJECT_NAME}_code_quality"
    when: always
    reports:
      codequality: gl-code-quality-report.json
    expire_in: 6 mos

test_generic:
  variables:
    COMPASS_ROOT: "/builds/compass/compass"
    SHESHA_ROOT: "$COMPASS_ROOT/shesha"
  script:
  - export PYTHONPATH=$PYTHONPATH:$SHESHA_ROOT:$NAGA_ROOT:$COMPASS_ROOT/local/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$COMPASS_ROOT/local/lib
  - . $CONDA_ROOT/etc/profile.d/conda.sh
  - . $CONDA_ROOT/etc/profile.d/mamba.sh
  - mamba env create --file environment.yml
  - mamba activate compass
  - $COMPASS_ROOT/shesha/tests/checkCompass.sh 
  - $COMPASS_ROOT/doc/generate_coverage.sh
  - coverage report
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    name: "${CI_PROJECT_NAME}_coverage"
    paths:
    - .coverage
    - report.xml
    - report_E2E.md
    reports:
      junit: report.xml
    expire_in: 6 mos
  when: manual
  only:
  - develop

build_release_focal:
  image: aocompass/base-20.04:11.8.0
  environment: production
  extends: build_generic
  when: always
  only:
  - main

build_debug_focal:
  image: aocompass/base-20.04:11.8.0
  environment: development
  extends: build_generic
  variables:
    COMPASS_DEBUG: "Debug"
  when: always
  only:
  - merge_requests
  - develop
  artifacts:
    paths:
    - local/
    expire_in: 6 mos

test_release_focal:
  image: aocompass/base-20.04:11.8.0
  environment: production
  extends: test_generic
  dependencies:
  - build_release_focal
  when: always
  only:
  - main

test_debug_focal:
  image: aocompass/base-20.04:11.8.0
  environment: development
  extends: test_generic
  dependencies:
  - build_debug_focal
  when: always
  only:
  - merge_requests
  - develop

build_release_jammy:
  image: aocompass/base-22.04:11.8.0
  environment: production
  extends: build_generic
  when: always
  only:
  - main

build_debug_jammy:
  image: aocompass/base-22.04:11.8.0
  environment: development
  extends: build_generic
  variables:
    COMPASS_DEBUG: "Debug"
  when: always
  only:
  - merge_requests
  - develop
  artifacts:
    paths:
    - local/
    expire_in: 6 mos

test_release_jammy:
  image: aocompass/base-22.04:11.8.0
  environment: production
  extends: test_generic
  dependencies:
  - build_release_jammy
  when: always
  only:
  - main

test_debug_jammy:
  image: aocompass/base-22.04:11.8.0
  environment: development
  extends: test_generic
  dependencies:
  - build_debug_jammy
  when: always
  only:
  - merge_requests
  - develop

build_release_rockylinux8:
  image: aocompass/base-rockylinux8:11.8.0
  environment: production
  extends: build_generic
  when: always
  only:
  - main

build_debug_rockylinux8:
  image: aocompass/base-rockylinux8:11.8.0
  environment: development
  extends: build_generic
  variables:
    COMPASS_DEBUG: "Debug"
  when: always
  only:
  - merge_requests
  - develop
  artifacts:
    paths:
    - local/
    expire_in: 6 mos

code_quality_release_rockylinux8:
  image: aocompass/base-rockylinux8:11.8.0
  environment: production
  extends: code_quality_generic
  dependencies:
  - build_release_rockylinux8
  when: always
  only:
  - main

code_quality_debug_rockylinux8:
  image: aocompass/base-rockylinux8:11.8.0
  environment: development
  extends: code_quality_generic
  dependencies:
  - build_debug_rockylinux8
  when: always
  only:
  - merge_requests
  - develop

test_release_rockylinux8:
  image: aocompass/base-rockylinux8:11.8.0
  environment: production
  extends: test_generic
  dependencies:
  - build_release_rockylinux8
  when: always
  only:
  - main

test_debug_rockylinux8:
  image: aocompass/base-rockylinux8:11.8.0
  environment: development
  extends: test_generic
  dependencies:
  - build_debug_rockylinux8
  when: always
  only:
  - merge_requests
  - develop

pages:
  image: aocompass/base-20.04:11.8.0
  environment: development
  stage: pages
  variables:
    COMPASS_ROOT: "/builds/compass/compass"
    SHESHA_ROOT: "$COMPASS_ROOT/shesha"
  dependencies:
  - build_debug_focal
  - test_debug_focal
  script:
  - export PYTHONPATH=$PYTHONPATH:$SHESHA_ROOT:$NAGA_ROOT:$COMPASS_ROOT/local/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$COMPASS_ROOT/local/lib
  - . $CONDA_ROOT/etc/profile.d/conda.sh
  - . $CONDA_ROOT/etc/profile.d/mamba.sh
  - mamba env create --file environment.yml
  - mamba activate compass
  - pip install -r script/requirements.txt
  - pip install -r script/requirements-test.txt
  - pip install -r script/requirements-doc.txt
  - $COMPASS_ROOT/doc/py_filter_install.sh
  - $COMPASS_ROOT/doc/generate_stubs.sh
  - $COMPASS_ROOT/doc/generate_reports.sh
  - $COMPASS_ROOT/doc/correctDoxygen_gitlab.sh
  artifacts:
    paths:
    - public
  when: always  # manual / always
  only:
  - develop
