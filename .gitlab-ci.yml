
stages:
- build
- test
- pages

.build_generic:
  stage: build
  variables:
    COMPASS_ROOT: "/builds/compass/compass"
    SHESHA_ROOT: "$COMPASS_ROOT/shesha"
    VCPKG_ROOT: "/builds/compass/vcpkg"
    COMPASS_DO_HALF: "OFF"
  script:
  - export PYTHONPATH=$PYTHONPATH:$SHESHA_ROOT:$COMPASS_ROOT/local/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$COMPASS_ROOT/local/lib
  - unset CUDA_SM
  - . $CONDA_ROOT/etc/profile.d/conda.sh
  - . $CONDA_ROOT/etc/profile.d/mamba.sh
  - mamba env create --file environment.yml
  - mamba activate compass
  - ./compile.py
  artifacts:
    name: "${CI_JOB_NAME}_binaires"
    paths:
    - local/
    expire_in: 6 mos

sast:
  stage: test
include:
- template: Jobs/Dependency-Scanning.latest.gitlab-ci.yml
- template: Jobs/SAST.latest.gitlab-ci.yml
- template: Jobs/Code-Quality.gitlab-ci.yml

code_quality:
  services:            # Shut off Docker-in-Docker
  tags:
  - cq-sans-dind     # Set this job to only run on our new specialized runner
  rules:
    - if: $CODE_QUALITY_DISABLED
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run code quality job in merge request pipelines
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH      # Run code quality job in pipelines on the default branch (but not in other branch pipelines)
    - if: $CI_COMMIT_TAG                               # Run code quality job in pipelines for tags

semgrep-sast:
  services:            # Shut off Docker-in-Docker
  tags:
  - cq-sans-dind     # Set this job to only run on our new specialized runner
  rules:
    - if: $CODE_QUALITY_DISABLED
      when: manual
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run code quality job in merge request pipelines
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH      # Run code quality job in pipelines on the default branch (but not in other branch pipelines)
    - if: $CI_COMMIT_TAG                               # Run code quality job in pipelines for tags

.lint_generic:
  stage: test
  variables:
    COMPASS_ROOT: "/builds/compass/compass"
    SHESHA_ROOT: "$COMPASS_ROOT/shesha"
    COMPASS_DO_HALF: "OFF"
  before_script:
  - 'pip3 install ruff'
  script:
  - export PYTHONPATH=$PYTHONPATH:$SHESHA_ROOT:$NAGA_ROOT:$COMPASS_ROOT/local/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$COMPASS_ROOT/local/lib
  - . $CONDA_ROOT/etc/profile.d/conda.sh
  - . $CONDA_ROOT/etc/profile.d/mamba.sh
  - mamba env create --file environment.yml
  - mamba activate compass
  - ruff check shesha > ruff-report.json
  artifacts:
    name: "${CI_PROJECT_NAME}_lint"
    when: always
    reports:
      codequality: ruff-report.json
    expire_in: 6 mos

.test_generic:
  variables:
    COMPASS_ROOT: "/builds/compass/compass"
    SHESHA_ROOT: "$COMPASS_ROOT/shesha"
  script:
  - export PYTHONPATH=$PYTHONPATH:$SHESHA_ROOT:$NAGA_ROOT:$COMPASS_ROOT/local/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$COMPASS_ROOT/local/lib
  - . $CONDA_ROOT/etc/profile.d/conda.sh
  - . $CONDA_ROOT/etc/profile.d/mamba.sh
  - mamba env create --file environment.yml
  - mamba activate compass
  - $COMPASS_ROOT/shesha/tests/checkCompass.sh 
  - $COMPASS_ROOT/doc/generate_coverage.sh
  - coverage report
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    name: "${CI_PROJECT_NAME}_coverage"
    paths:
    - .coverage
    - report.xml
    - report_E2E.md
    reports:
      junit: report.xml
    expire_in: 6 mos

build_release_jammy_11.8.0:
  image: aocompass/base-22.04:11.8.0
  environment: production
  extends: .build_generic
  when: always
  only:
  - main

build_debug_jammy_11.8.0:
  image: aocompass/base-22.04:11.8.0
  environment: development
  extends: .build_generic
  variables:
    COMPASS_DEBUG: "Debug"
  when: always
  only:
  - merge_requests
  - develop
  artifacts:
    paths:
    - local/
    expire_in: 6 mos

test_release_jammy_11.8.0:
  image: aocompass/base-22.04:11.8.0
  environment: production
  extends: .test_generic
  dependencies:
  - build_release_jammy_11.8.0
  when: always
  only:
  - main

test_debug_jammy_11.8.0:
  image: aocompass/base-22.04:11.8.0
  environment: development
  extends: .test_generic
  dependencies:
  - build_debug_jammy_11.8.0
  when: always
  only:
  - merge_requests
  - develop

build_release_rockylinux8_11.8.0:
  image: aocompass/base-rockylinux8:11.8.0
  environment: production
  extends: .build_generic
  when: always
  only:
  - main

build_debug_rockylinux8_11.8.0:
  image: aocompass/base-rockylinux8:11.8.0
  environment: development
  extends: .build_generic
  variables:
    COMPASS_DEBUG: "Debug"
  when: always
  only:
  - merge_requests
  - develop
  artifacts:
    paths:
    - local/
    expire_in: 6 mos

test_release_rockylinux8_11.8.0:
  image: aocompass/base-rockylinux8:11.8.0
  environment: production
  extends: .test_generic
  dependencies:
  - build_release_rockylinux8_11.8.0
  when: always
  only:
  - main

test_debug_rockylinux8_11.8.0:
  image: aocompass/base-rockylinux8:11.8.0
  environment: development
  extends: .test_generic
  dependencies:
  - build_debug_rockylinux8_11.8.0
  when: always
  only:
  - merge_requests
  - develop

lint_release_rockylinux8_11.8.0:
  image: aocompass/base-rockylinux8:11.8.0
  environment: production
  extends: .lint_generic
  dependencies:
  - build_release_rockylinux8_11.8.0
  when: always
  only:
  - main

lint_debug_rockylinux8_11.8.0:
  image: aocompass/base-rockylinux8:11.8.0
  environment: development
  extends: .lint_generic
  dependencies:
  - build_debug_rockylinux8_11.8.0
  when: always
  only:
  - merge_requests
  - develop

pages:
  image: aocompass/base-rockylinux8:11.8.0
  environment: development
  stage: pages
  variables:
    COMPASS_ROOT: "/builds/compass/compass"
    SHESHA_ROOT: "$COMPASS_ROOT/shesha"
  dependencies:
  - build_debug_rockylinux8_11.8.0
  - test_debug_rockylinux8_11.8.0
  script:
  - export PYTHONPATH=$PYTHONPATH:$SHESHA_ROOT:$NAGA_ROOT:$COMPASS_ROOT/local/python
  - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$COMPASS_ROOT/local/lib
  - . $CONDA_ROOT/etc/profile.d/conda.sh
  - . $CONDA_ROOT/etc/profile.d/mamba.sh
  - mamba env create --file environment.yml
  - mamba activate compass
  - pip install -r script/requirements.txt
  - pip install -r script/requirements-test.txt
  - pip install -r script/requirements-doc.txt
  - $COMPASS_ROOT/doc/py_filter_install.sh
  - $COMPASS_ROOT/doc/generate_stubs.sh
  - $COMPASS_ROOT/doc/generate_reports.sh
  - $COMPASS_ROOT/doc/correctDoxygen_gitlab.sh
  artifacts:
    paths:
    - public
  when: always  # manual / always
  only:
  - develop
